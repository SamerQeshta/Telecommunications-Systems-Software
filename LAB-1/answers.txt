Тестирование fib_p(N) с увеличением значения N:

Было замечено, что для небольших значений N, например N = 20,
функция fib_p(N) выполняется быстро.

По мере увеличения значения N, например N = 25, N = 30 и т. д.,
время, необходимое fib_p(N) для вычисления результата, значительно увеличивается.

При N = 35 время выполнения fib_p(N) превысило пять секунд, что указывает на то, 
что вычисление функции занимает больше времени по мере увеличения N.

Измерение времени, необходимого для вычисления Tail_fib(10000):

Функция Tail_fib(10000) выполняется быстро, вычисление результата занимает всего долю секунды.

Несмотря на большое входное значение (N = 10000), подход хвостовой рекурсии,
используемый в Tail_fib, позволяет функции эффективно вычислять результат без значительных задержек.
потому что для fib_p(N), который использует нехвостовой рекурсивный подход,
временная сложность функции является экспоненциальной. 
По мере увеличения N функции приходится выполнять избыточные вычисления, 
что приводит к значительному увеличению времени выполнения. Этот экспоненциальный рост приводит к тому, 
что функция превышает пять секунд для больших значений N.

Напротив, Tail_fib(10000) использует подход с хвостовой рекурсией, 
при котором функция эффективно перебирает последовательность Фибоначчи без необходимости избыточных вычислений. 
Этот подход приводит к линейной сложности по времени, 
позволяя функции быстро вычислить результат даже для больших входных значений, таких как N = 10000.


8> timer:tc(fib, tail_fib, [10000]).
{4096,336447648...........59947366875}


